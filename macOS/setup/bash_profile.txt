PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:${HOME}/bin

alias ddss="find . -name '*.DS_Store' -type f -delete"
alias pdserv="php -S localhost:8080 -t "
alias undoLastCommit="git reset --soft HEAD~1"
alias resetFileGit="git checkout HEAD -- "

##
# Convert a media file to 320kbps mp3
# PARAMETERS:
# 		$1 - path to media file to rip
##
makeMp3()
{
	if [ ! -f "$1" ]; then
		printf "[ERROR]: specify a file to convert\n"
		return 1
	fi

	ffmpeg -y -i "$1" -vn -c:a libmp3lame -b:a 320k "${1%.*}".mp3
}

##
# Convert a media file to 320kbps mp3
# PARAMETERS:
# 		$1 - path to URL to rip
##
ytAudio()
{
	if [ "$#" -ne 1 ]; then
		printf "[ERROR]: specify a URL to rip\n"
		return 1
	fi

	youtube-dl -f bestaudio -x --audio-format m4a --audio-quality 0 --add-metadata "$1"
}

##
# Archive a YouTube video, channel, or playlist.  Skips already downloaded content via skip file: archive.txt.
# PARAMETERS:
# 		$1 - URL to archive excluding "https://www.youtube.com/" prefix
# 		$2 - String to set as Album Artist tag in output
# 		$3 - String to set as Album tag in output
# 		$4 - Local path to album artwork.  Must be a PNG or JPG.
##
archiveYTAudio()
{
	if [ "$#" -ne 4 ]; then
		printf "Usage: archiveYTAudio <YT_PATH> <ARTIST> <ALUBM> <PATH_TO_ARTWORK>\n"
		return 1
	fi

	youtube-dl -f bestaudio -x --audio-format mp3 --audio-quality 0 --add-metadata \
	--download-archive archive.txt -o '%(title)s - [%(id)s].%(ext)s' "https://www.youtube.com/${1}" \
	--exec "eyeD3 -A \"${2}\" -b \"${3}\" --add-image \"${4}\":FRONT_COVER {}"
}